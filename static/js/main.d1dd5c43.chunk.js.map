{"version":3,"sources":["logo.svg","componentes/tarjetas/listaTarjetas.componente.js","App.js","reportWebVitals.js","index.js"],"names":["ListaTarjetas","props","className","proyectos","map","name","id","App","state","fetch","then","response","json","users","setState","href","icon","faGithub","color","size","style","margin","top","onInit","typewriter","typeString","start","width","display","textAlign","marginLeft","fontSize","marginTop","marginBottom","this","bottom","height","padding","backgroundColor","position","left","faHeart","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAAe,I,kBCGFA,EAAgB,SAACC,GAC1B,OAAQ,sBAAKC,UAAU,WAAf,gBACJD,EAAME,UAAUC,KAAI,SAAAD,GAAS,OAC7B,mCAAyBA,EAAUE,KAAnC,MAASF,EAAUG,W,wCC8DZC,E,kDAzDb,aAAc,IAAD,8BACX,gBAEKC,MAAQ,CACXL,UAAU,IAJD,E,qDAQb,WAAqB,IAAD,OACnBM,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAACX,UAAWU,S,oBAG1C,WACE,OACE,sBAAKX,UAAU,MAAf,UAEE,sBAAKA,UAAU,UAAf,UACH,qBAAKA,UAAU,SAAf,SACC,mBAAGa,KAAK,6BAAR,SAAqC,cAAC,IAAD,CAAiBb,UAAU,SAASc,KAAMC,IAAUC,MAAM,QAAQC,KAAM,KAAMC,MAAO,CAACC,OAAO,UAElI,qBAAKD,MAAO,CAACE,IAAI,OAAjB,SACE,oBAAIhB,GAAG,IAAP,SAAW,uCAAS,qBAAIA,GAAG,cAAP,UAAqB,cAAC,IAAD,CAAYiB,OAAQ,SAACC,GAAD,OAC7DA,EAAWC,WAAW,mBAAmBC,WADrB,cAIpB,4DAA8B,mBAAGX,KAAK,iCAAR,oCAC9B,qBAAKb,UAAU,iBAEnB,sBAAKA,UAAU,YAAYkB,MAAO,CAACO,MAAM,SAAzC,UACC,oBAAIrB,GAAG,kBAAP,oBAGG,gCACE,wBAAQc,MAAO,CAACQ,QAAQ,QAAQC,UAAU,OAAOC,WAAW,QAA5D,SACF,+BACE,0EACA,4FACA,2IAEL,uBACA,oBAAIV,MAAO,CAACW,SAAS,OAAOV,OAAO,EAAEW,UAAU,GAAGC,aAAa,GAA/D,uBACC,4BAAG,wJAEH,cAAC,EAAD,CAAe9B,UAAY+B,KAAK1B,MAAML,YAGtC,qBAAKD,UAAU,WAAWkB,MAAO,CAACe,OAAO,EAAER,MAAM,QAAQN,OAAO,EAAGe,OAAO,GAAKC,QAAQ,EAAGC,gBAAgB,QAAQpB,MAAM,QAAQW,UAAU,SAA1I,SAAqJ,qBAAIT,MAAO,CAACY,UAAU,EAAED,SAAS,GAAGQ,SAAS,WAAWC,MAAM,IAA9D,kBAAwE,cAAC,IAAD,CAAiBxB,KAAMyB,MAA/F,0B,GAjDzIC,aCEHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnC,MAAK,YAAkD,IAA/CoC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d1dd5c43.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport './listaTarjetas.estilo.css'\r\n\r\nexport const ListaTarjetas = (props) => {\r\n    return (<div className='tarjetas'>   {\r\n        props.proyectos.map(proyectos=>( \r\n        <h5 key={proyectos.id}> {proyectos.name} </h5>\r\n        ))}\r\n  </div>)\r\n}","import logo from './logo.svg';\nimport './App.css';\nimport React, {Component} from 'react';\nimport {ListaTarjetas} from './componentes/tarjetas/listaTarjetas.componente'\nimport { faGithub } from '@fortawesome/free-brands-svg-icons' \nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeart } from \"@fortawesome/free-solid-svg-icons\";\n\nimport Typewriter from \"typewriter-effect\";\n\nclass App extends Component{\n  constructor(){\n    super();\n    \n    this.state = {\n      proyectos:[]\n    }\n  }\n\n  componentDidMount() {\n   fetch('https://jsonplaceholder.typicode.com/users')\n   .then(response => response.json())\n   .then(users => this.setState({proyectos: users}));\n}\n\n  render() {\n    return (\n      <div className=\"App\">\n\n        <div className='portada'>\n    \t<div className='navbar'>\n      <a href='https://github.com/frann11'><FontAwesomeIcon className='Github' icon={faGithub} color='white' size={'3x'} style={{margin:20}}></FontAwesomeIcon></a>\n  </div>\n    \t\t<div style={{top:'10%'}}>\n        <h1 id='l'><strong>#<h1 id='efectoTipeo'><Typewriter onInit={(typewriter) =>\n        typewriter.typeString('100DiasDeCodigo').start()\n        }/> </h1></strong></h1>\n    </div>\n        <h2>Mi intento del desafio de <a href='https://www.100daysofcode.com/'>#100 dias de codigo</a></h2>\n        <div className='container'></div>\n    </div>\n    <div className='contenido' style={{width:'100vw'}}>\n    \t<h3 id='proyectosTitulo'>Reglas</h3>\n      \n    \t\n        <div>\n          <strong style={{display:'block',textAlign:'left',marginLeft:'20vw'}}>\n        <ul>\n          <li>Programar un minimo de 1 hora por d√≠a</li>\n          <li> idealmente hacer un proyecto o completar una idea por dia</li>\n          <li> los mismos seran de baja a mediana complejidad y podran o no incluir ejemplos tomados de tutoriales</li>\n          </ul></strong> \n    \t<hr></hr>\n    \t<h4 style={{fontSize:'4rem',margin:0,marginTop:25,marginBottom:5}}>Proyectos</h4>\n      <p><strong>Los proyectos se cargaran automaticamente en esta seccion, a partir de la subida a sus repositorios de github</strong></p>\n      </div>\n      <ListaTarjetas proyectos= {this.state.proyectos}>\n      \n      </ListaTarjetas>\n      <div className='creditos' style={{bottom:0,width:'100vw',margin:0, height:21 , padding:0, backgroundColor:'black',color:'white',textAlign:'right',}}><h7 style={{marginTop:5,fontSize:13,position:'relative',left:-30}}>Con  <FontAwesomeIcon icon={faHeart}/> franchu</h7></div>\n    </div>\n     </div>\n\n    )\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}